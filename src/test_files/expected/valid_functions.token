NEWLINE nl
DEF def
FLOAT_TYPE float
ID square
LPAREN (
FLOAT_TYPE float
ID x
RPAREN )
COLON :
LBRACE {
NEWLINE nl
RETURN return
ID x
TIMES *
ID x
NEWLINE nl
RBRACE }
NEWLINE nl
DEF def
FLOAT_TYPE float
ID power
LPAREN (
FLOAT_TYPE float
ID f
SEMICOLON ;
INT_TYPE int
ID i
RPAREN )
COLON :
LBRACE {
NEWLINE nl
FLOAT_TYPE float
ID r
EQUALS =
INT 1
NEWLINE nl
INT_TYPE int
ID s
EQUALS =
INT 1
NEWLINE nl
WHILE while
ID s
LT <
ID i
COLON :
LBRACE {
NEWLINE nl
ID r
EQUALS =
ID r
TIMES *
ID f
NEWLINE nl
ID s
EQUALS =
ID s
PLUS +
INT 1
NEWLINE nl
RBRACE }
NEWLINE nl
RETURN return
ID r
NEWLINE nl
RBRACE }
NEWLINE nl
FLOAT_TYPE float
ID result
EQUALS =
ID square
LPAREN (
FLOAT 2.0
RPAREN )
NEWLINE nl
FLOAT_TYPE float
ID result_2
EQUALS =
ID power
LPAREN (
ID result
COMMA ,
INT 3
RPAREN )
NEWLINE nl
NEWLINE nl
TYPE type
ID user
LBRACE {
NEWLINE nl
INT_TYPE int
ID age
NEWLINE nl
RBRACE }
NEWLINE nl
DEF def
ID user
ID create_user
LPAREN (
INT_TYPE int
ID age
RPAREN )
COLON :
LBRACE {
NEWLINE nl
ID user
ID u
NEWLINE nl
ID u
DOT .
ID age
EQUALS =
ID age
NEWLINE nl
RETURN return
ID u
NEWLINE nl
RBRACE }
NEWLINE nl
