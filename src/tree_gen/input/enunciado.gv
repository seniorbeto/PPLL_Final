// Árbol Sintáctico
digraph {
	0 [label=program]
	1 [label="('register', 'Point', ('block', ['nl', ('declaration', 'float', [('var', 'x', ('assignment', None)), ('var', 'y', ('assignment', None))])]))"]
	0 -> 1
	2 [label=register]
	1 -> 2
	3 [label=Point]
	2 -> 3
	4 [label=block]
	2 -> 4
	5 [label=nl]
	4 -> 5
	6 [label=nl]
	5 -> 6
	7 [label=declaration]
	5 -> 7
	8 [label=float]
	7 -> 8
	9 [label="('var', 'x', ('assignment', None))"]
	7 -> 9
	10 [label=var]
	9 -> 10
	11 [label=x]
	10 -> 11
	12 [label=assignment]
	10 -> 12
	13 [label=var]
	9 -> 13
	14 [label=y]
	13 -> 14
	15 [label=assignment]
	13 -> 15
	16 [label=nl]
	1 -> 16
	17 [label=register]
	1 -> 17
	18 [label=Circle]
	17 -> 18
	19 [label=block]
	17 -> 19
	20 [label=nl]
	19 -> 20
	21 [label=nl]
	20 -> 21
	22 [label=declaration]
	20 -> 22
	23 [label=Point]
	22 -> 23
	24 [label="('var', 'center', ('assignment', None))"]
	22 -> 24
	25 [label=var]
	24 -> 25
	26 [label=center]
	25 -> 26
	27 [label=assignment]
	25 -> 27
	28 [label=declaration]
	20 -> 28
	29 [label=float]
	28 -> 29
	30 [label="('var', 'radius', ('assignment', None))"]
	28 -> 30
	31 [label=var]
	30 -> 31
	32 [label=radius]
	31 -> 32
	33 [label=assignment]
	31 -> 33
	34 [label=nl]
	1 -> 34
	35 [label=declaration]
	1 -> 35
	36 [label=Circle]
	35 -> 36
	37 [label="('vector_decl', 'balls', ('literal', 2), ('assignment', None))"]
	35 -> 37
	38 [label=vector_decl]
	37 -> 38
	39 [label=balls]
	38 -> 39
	40 [label=literal]
	38 -> 40
	41 [label=2]
	40 -> 41
	42 [label=assignment]
	38 -> 42
	43 [label=nl]
	1 -> 43
	44 [label=assign]
	1 -> 44
	45 [label=index]
	44 -> 45
	46 [label=id]
	45 -> 46
	47 [label=balls]
	46 -> 47
	48 [label=literal]
	45 -> 48
	49 [label=0]
	48 -> 49
	50 [label=dot]
	45 -> 50
	51 [label=id]
	50 -> 51
	52 [label=center]
	51 -> 52
	53 [label=dot]
	50 -> 53
	54 [label=id]
	53 -> 54
	55 [label=x]
	54 -> 55
	56 [label=literal]
	44 -> 56
	57 [label=5]
	56 -> 57
	58 [label=assign]
	1 -> 58
	59 [label=index]
	58 -> 59
	60 [label=id]
	59 -> 60
	61 [label=balls]
	60 -> 61
	62 [label=literal]
	59 -> 62
	63 [label=0]
	62 -> 63
	64 [label=dot]
	59 -> 64
	65 [label=id]
	64 -> 65
	66 [label=center]
	65 -> 66
	67 [label=dot]
	64 -> 67
	68 [label=id]
	67 -> 68
	69 [label=y]
	68 -> 69
	70 [label=literal]
	58 -> 70
	71 [label=255]
	70 -> 71
	72 [label=assign]
	1 -> 72
	73 [label=index]
	72 -> 73
	74 [label=id]
	73 -> 74
	75 [label=balls]
	74 -> 75
	76 [label=literal]
	73 -> 76
	77 [label=0]
	76 -> 77
	78 [label=dot]
	73 -> 78
	79 [label=id]
	78 -> 79
	80 [label=radius]
	79 -> 80
	81 [label=literal]
	72 -> 81
	82 [label=1.74]
	81 -> 82
	83 [label=nl]
	1 -> 83
	84 [label=assign]
	1 -> 84
	85 [label=index]
	84 -> 85
	86 [label=id]
	85 -> 86
	87 [label=balls]
	86 -> 87
	88 [label=literal]
	85 -> 88
	89 [label=1]
	88 -> 89
	90 [label=dot]
	85 -> 90
	91 [label=id]
	90 -> 91
	92 [label=center]
	91 -> 92
	93 [label=dot]
	90 -> 93
	94 [label=id]
	93 -> 94
	95 [label=x]
	94 -> 95
	96 [label=literal]
	84 -> 96
	97 [label=1.0]
	96 -> 97
	98 [label=assign]
	1 -> 98
	99 [label=index]
	98 -> 99
	100 [label=id]
	99 -> 100
	101 [label=balls]
	100 -> 101
	102 [label=literal]
	99 -> 102
	103 [label=1]
	102 -> 103
	104 [label=dot]
	99 -> 104
	105 [label=id]
	104 -> 105
	106 [label=center]
	105 -> 106
	107 [label=dot]
	104 -> 107
	108 [label=id]
	107 -> 108
	109 [label=y]
	108 -> 109
	110 [label=unary]
	98 -> 110
	111 [label="-"]
	110 -> 111
	112 [label=literal]
	110 -> 112
	113 [label=31]
	112 -> 113
	114 [label=assign]
	1 -> 114
	115 [label=index]
	114 -> 115
	116 [label=id]
	115 -> 116
	117 [label=balls]
	116 -> 117
	118 [label=literal]
	115 -> 118
	119 [label=1]
	118 -> 119
	120 [label=dot]
	115 -> 120
	121 [label=id]
	120 -> 121
	122 [label=radius]
	121 -> 122
	123 [label=literal]
	114 -> 123
	124 [label=3.2]
	123 -> 124
	125 [label=declaration]
	1 -> 125
	126 [label=int]
	125 -> 126
	127 [label="('var', 'i', ('assignment', ('assign', ('literal', 0))))"]
	125 -> 127
	128 [label=var]
	127 -> 128
	129 [label=i]
	128 -> 129
	130 [label=assignment]
	128 -> 130
	131 [label=assign]
	130 -> 131
	132 [label=literal]
	131 -> 132
	133 [label=0]
	132 -> 133
	134 [label=while_statement]
	1 -> 134
	135 [label=binop]
	134 -> 135
	136 [label="<"]
	135 -> 136
	137 [label=id]
	135 -> 137
	138 [label=i]
	137 -> 138
	139 [label=dot]
	135 -> 139
	140 [label=id]
	139 -> 140
	141 [label=balls]
	140 -> 141
	142 [label=id]
	139 -> 142
	143 [label=len]
	142 -> 143
	144 [label=block]
	134 -> 144
	145 [label=nl]
	144 -> 145
	146 [label=nl]
	145 -> 146
	147 [label=assign]
	145 -> 147
	148 [label=index]
	147 -> 148
	149 [label=id]
	148 -> 149
	150 [label=balls]
	149 -> 150
	151 [label=id]
	148 -> 151
	152 [label=i]
	151 -> 152
	153 [label=dot]
	148 -> 153
	154 [label=id]
	153 -> 154
	155 [label=center]
	154 -> 155
	156 [label=dot]
	153 -> 156
	157 [label=id]
	156 -> 157
	158 [label=x]
	157 -> 158
	159 [label=binop]
	147 -> 159
	160 [label="+"]
	159 -> 160
	161 [label=index]
	159 -> 161
	162 [label=id]
	161 -> 162
	163 [label=balls]
	162 -> 163
	164 [label=id]
	161 -> 164
	165 [label=i]
	164 -> 165
	166 [label=dot]
	161 -> 166
	167 [label=id]
	166 -> 167
	168 [label=center]
	167 -> 168
	169 [label=dot]
	166 -> 169
	170 [label=id]
	169 -> 170
	171 [label=x]
	170 -> 171
	172 [label=literal]
	159 -> 172
	173 [label=1]
	172 -> 173
	174 [label=assign]
	145 -> 174
	175 [label=index]
	174 -> 175
	176 [label=id]
	175 -> 176
	177 [label=balls]
	176 -> 177
	178 [label=id]
	175 -> 178
	179 [label=i]
	178 -> 179
	180 [label=dot]
	175 -> 180
	181 [label=id]
	180 -> 181
	182 [label=center]
	181 -> 182
	183 [label=dot]
	180 -> 183
	184 [label=id]
	183 -> 184
	185 [label=y]
	184 -> 185
	186 [label=binop]
	174 -> 186
	187 [label="+"]
	186 -> 187
	188 [label=index]
	186 -> 188
	189 [label=id]
	188 -> 189
	190 [label=balls]
	189 -> 190
	191 [label=id]
	188 -> 191
	192 [label=i]
	191 -> 192
	193 [label=dot]
	188 -> 193
	194 [label=id]
	193 -> 194
	195 [label=center]
	194 -> 195
	196 [label=dot]
	193 -> 196
	197 [label=id]
	196 -> 197
	198 [label=y]
	197 -> 198
	199 [label=literal]
	186 -> 199
	200 [label=2]
	199 -> 200
	201 [label=assign]
	145 -> 201
	202 [label=id]
	201 -> 202
	203 [label=i]
	202 -> 203
	204 [label=binop]
	201 -> 204
	205 [label="+"]
	204 -> 205
	206 [label=id]
	204 -> 206
	207 [label=i]
	206 -> 207
	208 [label=literal]
	204 -> 208
	209 [label=1]
	208 -> 209
	210 [label=nl]
	1 -> 210
	211 [label=funct_decl]
	1 -> 211
	212 [label=type_funct]
	211 -> 212
	213 [label=bool]
	212 -> 213
	214 [label=gte]
	211 -> 214
	215 [label=arg_funct]
	211 -> 215
	216 [label=type]
	215 -> 216
	217 [label=type_funct]
	215 -> 217
	218 [label=int]
	217 -> 218
	219 [label=args]
	215 -> 219
	220 [label=a]
	215 -> 220
	221 [label="(None, 'b')"]
	220 -> 221
	222 [label=None]
	221 -> 222
	223 [label=b]
	222 -> 223
	224 [label="[]"]
	220 -> 224
	225 [label=block_funct]
	211 -> 225
	226 [label=nl]
	225 -> 226
	227 [label=nl]
	226 -> 227
	228 [label=funct_ret]
	225 -> 228
	229 [label=binop]
	228 -> 229
	230 [label=">"]
	229 -> 230
	231 [label=id]
	229 -> 231
	232 [label=a]
	231 -> 232
	233 [label=id]
	229 -> 233
	234 [label=b]
	233 -> 234
	235 [label=nl]
	1 -> 235
	236 [label=declaration]
	1 -> 236
	237 [label=char]
	236 -> 237
	238 [label="('var', 'result', ('assignment', None))"]
	236 -> 238
	239 [label=var]
	238 -> 239
	240 [label=result]
	239 -> 240
	241 [label=assignment]
	239 -> 241
	242 [label=if_statement]
	1 -> 242
	243 [label=funct_call]
	242 -> 243
	244 [label=gte]
	243 -> 244
	245 [label="('index', ('id', 'balls'), ('literal', 0), ('dot', ('id', 'radius')))"]
	243 -> 245
	246 [label=index]
	245 -> 246
	247 [label=id]
	246 -> 247
	248 [label=balls]
	247 -> 248
	249 [label=literal]
	246 -> 249
	250 [label=0]
	249 -> 250
	251 [label=dot]
	246 -> 251
	252 [label=id]
	251 -> 252
	253 [label=radius]
	252 -> 253
	254 [label=index]
	245 -> 254
	255 [label=id]
	254 -> 255
	256 [label=balls]
	255 -> 256
	257 [label=literal]
	254 -> 257
	258 [label=1]
	257 -> 258
	259 [label=dot]
	254 -> 259
	260 [label=id]
	259 -> 260
	261 [label=radius]
	260 -> 261
	262 [label=block]
	242 -> 262
	263 [label=nl]
	262 -> 263
	264 [label=nl]
	263 -> 264
	265 [label=assign]
	263 -> 265
	266 [label=id]
	265 -> 266
	267 [label=result]
	266 -> 267
	268 [label=literal]
	265 -> 268
	269 [label=Y]
	268 -> 269
	270 [label=else]
	242 -> 270
	271 [label=block]
	270 -> 271
	272 [label=nl]
	271 -> 272
	273 [label=nl]
	272 -> 273
	274 [label=assign]
	272 -> 274
	275 [label=id]
	274 -> 275
	276 [label=result]
	275 -> 276
	277 [label=literal]
	274 -> 277
	278 [label=N]
	277 -> 278
	279 [label=nl]
	1 -> 279
	280 [label=declaration]
	1 -> 280
	281 [label=int]
	280 -> 281
	282 [label="('var', 'a', ('assignment', None))"]
	280 -> 282
	283 [label=var]
	282 -> 283
	284 [label=a]
	283 -> 284
	285 [label=assignment]
	283 -> 285
	286 [label=var]
	282 -> 286
	287 [label=b]
	286 -> 287
	288 [label=assignment]
	286 -> 288
	289 [label=var]
	282 -> 289
	290 [label=c]
	289 -> 290
	291 [label=assignment]
	289 -> 291
	292 [label=var]
	282 -> 292
	293 [label=d]
	292 -> 293
	294 [label=assignment]
	292 -> 294
	295 [label=assign]
	294 -> 295
	296 [label=literal]
	295 -> 296
	297 [label=0]
	296 -> 297
	298 [label=assign_recursive]
	1 -> 298
	299 [label=id]
	298 -> 299
	300 [label=a]
	299 -> 300
	301 [label=assign_recursive]
	298 -> 301
	302 [label=id]
	301 -> 302
	303 [label=c]
	302 -> 303
	304 [label=assign]
	301 -> 304
	305 [label=id]
	304 -> 305
	306 [label=d]
	305 -> 306
	307 [label=binop]
	304 -> 307
	308 [label="*"]
	307 -> 308
	309 [label=literal]
	307 -> 309
	310 [label=2]
	309 -> 310
	311 [label=literal]
	307 -> 311
	312 [label=3]
	311 -> 312
	313 [label=nl]
	1 -> 313
	314 [label=nl]
	1 -> 314
	315 [label=declaration]
	1 -> 315
	316 [label=int]
	315 -> 316
	317 [label="('var', 'a', ('assignment', None))"]
	315 -> 317
	318 [label=var]
	317 -> 318
	319 [label=a]
	318 -> 319
	320 [label=assignment]
	318 -> 320
	321 [label=var]
	317 -> 321
	322 [label=b]
	321 -> 322
	323 [label=assignment]
	321 -> 323
	324 [label=assign]
	1 -> 324
	325 [label=id]
	324 -> 325
	326 [label=a]
	325 -> 326
	327 [label=literal]
	324 -> 327
	328 [label=10]
	327 -> 328
	329 [label=assign]
	1 -> 329
	330 [label=id]
	329 -> 330
	331 [label=b]
	330 -> 331
	332 [label=binop]
	329 -> 332
	333 [label="<="]
	332 -> 333
	334 [label=binop]
	332 -> 334
	335 [label="*"]
	334 -> 335
	336 [label=id]
	334 -> 336
	337 [label=a]
	336 -> 337
	338 [label=id]
	334 -> 338
	339 [label=b]
	338 -> 339
	340 [label=literal]
	332 -> 340
	341 [label=200]
	340 -> 341
	342 [label=assign]
	1 -> 342
	343 [label=id]
	342 -> 343
	344 [label=c]
	343 -> 344
	345 [label=literal]
	342 -> 345
	346 [label="$"]
	345 -> 346
	347 [label=declaration]
	1 -> 347
	348 [label=float]
	347 -> 348
	349 [label="('var', 'd', ('assignment', None))"]
	347 -> 349
	350 [label=var]
	349 -> 350
	351 [label=d]
	350 -> 351
	352 [label=assignment]
	350 -> 352
	353 [label=var]
	349 -> 353
	354 [label=e]
	353 -> 354
	355 [label=assignment]
	353 -> 355
	356 [label=assign]
	355 -> 356
	357 [label=binop]
	356 -> 357
	358 [label="/"]
	357 -> 358
	359 [label=literal]
	357 -> 359
	360 [label=255]
	359 -> 360
	361 [label=binop]
	357 -> 361
	362 [label="*"]
	361 -> 362
	363 [label=literal]
	361 -> 363
	364 [label=5]
	363 -> 364
	365 [label=binop]
	361 -> 365
	366 [label="-"]
	365 -> 366
	367 [label=literal]
	365 -> 367
	368 [label=450]
	367 -> 368
	369 [label=literal]
	365 -> 369
	370 [label="1e-10"]
	369 -> 370
	371 [label=declaration]
	1 -> 371
	372 [label=bool]
	371 -> 372
	373 [label="('var', 'var1', ('assignment', None))"]
	371 -> 373
	374 [label=var]
	373 -> 374
	375 [label=var1]
	374 -> 375
	376 [label=assignment]
	374 -> 376
	377 [label=var]
	373 -> 377
	378 [label=VAR1]
	377 -> 378
	379 [label=assignment]
	377 -> 379
	380 [label=var]
	373 -> 380
	381 [label=Var1]
	380 -> 381
	382 [label=assignment]
	380 -> 382
	383 [label=declaration]
	1 -> 383
	384 [label=float]
	383 -> 384
	385 [label="('var', 'var1', ('assignment', None))"]
	383 -> 385
	386 [label=var]
	385 -> 386
	387 [label=var1]
	386 -> 387
	388 [label=assignment]
	386 -> 388
	389 [label=assign]
	1 -> 389
	390 [label=id]
	389 -> 390
	391 [label=VAR1]
	390 -> 391
	392 [label=literal]
	389 -> 392
	393 [label=false]
	392 -> 393
	394 [label=assign]
	1 -> 394
	395 [label=id]
	394 -> 395
	396 [label=VAR1]
	395 -> 396
	397 [label=literal]
	394 -> 397
	398 [label=true]
	397 -> 398
	399 [label=declaration]
	1 -> 399
	400 [label=int]
	399 -> 400
	401 [label="('vector_decl', 'vector_3d', ('literal', 3), ('assignment', None))"]
	399 -> 401
	402 [label=vector_decl]
	401 -> 402
	403 [label=vector_3d]
	402 -> 403
	404 [label=literal]
	402 -> 404
	405 [label=3]
	404 -> 405
	406 [label=assignment]
	402 -> 406
	407 [label=assign]
	1 -> 407
	408 [label=index]
	407 -> 408
	409 [label=id]
	408 -> 409
	410 [label=vector_3d]
	409 -> 410
	411 [label=literal]
	408 -> 411
	412 [label=0]
	411 -> 412
	413 [label=literal]
	407 -> 413
	414 [label=5]
	413 -> 414
	415 [label=assign]
	1 -> 415
	416 [label=index]
	415 -> 416
	417 [label=id]
	416 -> 417
	418 [label=vector_3d]
	417 -> 418
	419 [label=literal]
	416 -> 419
	420 [label=1]
	419 -> 420
	421 [label=literal]
	415 -> 421
	422 [label=2]
	421 -> 422
	423 [label=assign]
	1 -> 423
	424 [label=index]
	423 -> 424
	425 [label=id]
	424 -> 425
	426 [label=vector_3d]
	425 -> 426
	427 [label=literal]
	424 -> 427
	428 [label=2]
	427 -> 428
	429 [label=literal]
	423 -> 429
	430 [label=1]
	429 -> 430
	431 [label=declaration]
	1 -> 431
	432 [label=int]
	431 -> 432
	433 [label="('var', 'array_length', ('assignment', ('assign', ('id', 'vector_3d_len'))))"]
	431 -> 433
	434 [label=var]
	433 -> 434
	435 [label=array_length]
	434 -> 435
	436 [label=assignment]
	434 -> 436
	437 [label=assign]
	436 -> 437
	438 [label=id]
	437 -> 438
	439 [label=vector_3d_len]
	438 -> 439
	440 [label=assign]
	1 -> 440
	441 [label=index]
	440 -> 441
	442 [label=id]
	441 -> 442
	443 [label=vector_3d]
	442 -> 443
	444 [label=literal]
	441 -> 444
	445 [label=1]
	444 -> 445
	446 [label=binop]
	440 -> 446
	447 [label="-"]
	446 -> 447
	448 [label=index]
	446 -> 448
	449 [label=id]
	448 -> 449
	450 [label=vector_3d]
	449 -> 450
	451 [label=literal]
	448 -> 451
	452 [label=2]
	451 -> 452
	453 [label=literal]
	446 -> 453
	454 [label=4]
	453 -> 454
	455 [label=register]
	1 -> 455
	456 [label=Point]
	455 -> 456
	457 [label=block]
	455 -> 457
	458 [label=nl]
	457 -> 458
	459 [label=nl]
	458 -> 459
	460 [label=declaration]
	458 -> 460
	461 [label=float]
	460 -> 461
	462 [label="('var', 'x', ('assignment', None))"]
	460 -> 462
	463 [label=var]
	462 -> 463
	464 [label=x]
	463 -> 464
	465 [label=assignment]
	463 -> 465
	466 [label=var]
	462 -> 466
	467 [label=y]
	466 -> 467
	468 [label=assignment]
	466 -> 468
	469 [label=nl]
	1 -> 469
	470 [label=declaration]
	1 -> 470
	471 [label=Point]
	470 -> 471
	472 [label="('vector_decl', 'line', ('literal', 2), ('assignment', None))"]
	470 -> 472
	473 [label=vector_decl]
	472 -> 473
	474 [label=line]
	473 -> 474
	475 [label=literal]
	473 -> 475
	476 [label=2]
	475 -> 476
	477 [label=assignment]
	473 -> 477
	478 [label=assign]
	1 -> 478
	479 [label=index]
	478 -> 479
	480 [label=id]
	479 -> 480
	481 [label=line]
	480 -> 481
	482 [label=literal]
	479 -> 482
	483 [label=1]
	482 -> 483
	484 [label=dot]
	479 -> 484
	485 [label=id]
	484 -> 485
	486 [label=x]
	485 -> 486
	487 [label=literal]
	478 -> 487
	488 [label=1]
	487 -> 488
	489 [label=assign]
	1 -> 489
	490 [label=index]
	489 -> 490
	491 [label=id]
	490 -> 491
	492 [label=line]
	491 -> 492
	493 [label=literal]
	490 -> 493
	494 [label=1]
	493 -> 494
	495 [label=dot]
	490 -> 495
	496 [label=id]
	495 -> 496
	497 [label=y]
	496 -> 497
	498 [label=literal]
	489 -> 498
	499 [label=2]
	498 -> 499
	500 [label=register]
	1 -> 500
	501 [label=Circle]
	500 -> 501
	502 [label=block]
	500 -> 502
	503 [label=nl]
	502 -> 503
	504 [label=nl]
	503 -> 504
	505 [label=declaration]
	503 -> 505
	506 [label=float]
	505 -> 506
	507 [label="('var', 'cx', ('assignment', None))"]
	505 -> 507
	508 [label=var]
	507 -> 508
	509 [label=cx]
	508 -> 509
	510 [label=assignment]
	508 -> 510
	511 [label=var]
	507 -> 511
	512 [label=cy]
	511 -> 512
	513 [label=assignment]
	511 -> 513
	514 [label=var]
	507 -> 514
	515 [label=radius]
	514 -> 515
	516 [label=assignment]
	514 -> 516
	517 [label=declaration]
	503 -> 517
	518 [label=char]
	517 -> 518
	519 [label="('var', 'color', ('assignment', None))"]
	517 -> 519
	520 [label=var]
	519 -> 520
	521 [label=color]
	520 -> 521
	522 [label=assignment]
	520 -> 522
	523 [label=nl]
	1 -> 523
	524 [label=declaration]
	1 -> 524
	525 [label=Circle]
	524 -> 525
	526 [label="('var', 'c', ('assignment', None))"]
	524 -> 526
	527 [label=var]
	526 -> 527
	528 [label=c]
	527 -> 528
	529 [label=assignment]
	527 -> 529
	530 [label=assign]
	1 -> 530
	531 [label=dot]
	530 -> 531
	532 [label=id]
	531 -> 532
	533 [label=c]
	532 -> 533
	534 [label=id]
	531 -> 534
	535 [label=radius]
	534 -> 535
	536 [label=literal]
	530 -> 536
	537 [label=10.2]
	536 -> 537
	538 [label=assign]
	1 -> 538
	539 [label=dot]
	538 -> 539
	540 [label=id]
	539 -> 540
	541 [label=c]
	540 -> 541
	542 [label=id]
	539 -> 542
	543 [label=color]
	542 -> 543
	544 [label=literal]
	538 -> 544
	545 [label=R]
	544 -> 545
	546 [label=declaration]
	1 -> 546
	547 [label=int]
	546 -> 547
	548 [label="('var', 'circle_area', ('assignment', ('assign', ('binop', '*', ('binop', '*', ('literal', 3.14), ('dot', ('id', 'c'), ('id', 'radius'))), ('dot', ('id', 'c'), ('id', 'radius'))))))"]
	546 -> 548
	549 [label=var]
	548 -> 549
	550 [label=circle_area]
	549 -> 550
	551 [label=assignment]
	549 -> 551
	552 [label=assign]
	551 -> 552
	553 [label=binop]
	552 -> 553
	554 [label="*"]
	553 -> 554
	555 [label=binop]
	553 -> 555
	556 [label="*"]
	555 -> 556
	557 [label=literal]
	555 -> 557
	558 [label=3.14]
	557 -> 558
	559 [label=dot]
	555 -> 559
	560 [label=id]
	559 -> 560
	561 [label=c]
	560 -> 561
	562 [label=id]
	559 -> 562
	563 [label=radius]
	562 -> 563
	564 [label=dot]
	553 -> 564
	565 [label=id]
	564 -> 565
	566 [label=c]
	565 -> 566
	567 [label=id]
	564 -> 567
	568 [label=radius]
	567 -> 568
	569 [label=declaration]
	1 -> 569
	570 [label=Square]
	569 -> 570
	571 [label="('var', 's', ('assignment', None))"]
	569 -> 571
	572 [label=var]
	571 -> 572
	573 [label=s]
	572 -> 573
	574 [label=assignment]
	572 -> 574
	575 [label=declaration]
	1 -> 575
	576 [label=float]
	575 -> 576
	577 [label="('var', 'f1', ('assignment', None))"]
	575 -> 577
	578 [label=var]
	577 -> 578
	579 [label=f1]
	578 -> 579
	580 [label=assignment]
	578 -> 580
	581 [label=var]
	577 -> 581
	582 [label=f2]
	581 -> 582
	583 [label=assignment]
	581 -> 583
	584 [label=declaration]
	1 -> 584
	585 [label=int]
	584 -> 585
	586 [label="('var', 't', ('assignment', None))"]
	584 -> 586
	587 [label=var]
	586 -> 587
	588 [label=t]
	587 -> 588
	589 [label=assignment]
	587 -> 589
	590 [label=declaration]
	1 -> 590
	591 [label=bool]
	590 -> 591
	592 [label="('var', 'b', ('assignment', None))"]
	590 -> 592
	593 [label=var]
	592 -> 593
	594 [label=b]
	593 -> 594
	595 [label=assignment]
	593 -> 595
	596 [label=assign]
	1 -> 596
	597 [label=id]
	596 -> 597
	598 [label=f1]
	597 -> 598
	599 [label=literal]
	596 -> 599
	600 [label=7.5]
	599 -> 600
	601 [label=assign]
	1 -> 601
	602 [label=id]
	601 -> 602
	603 [label=f2]
	602 -> 603
	604 [label=literal]
	601 -> 604
	605 [label=3]
	604 -> 605
	606 [label=assign]
	1 -> 606
	607 [label=id]
	606 -> 607
	608 [label=t]
	607 -> 608
	609 [label=literal]
	606 -> 609
	610 [label=a]
	609 -> 610
	611 [label=assign]
	1 -> 611
	612 [label=id]
	611 -> 612
	613 [label=b]
	612 -> 613
	614 [label=literal]
	611 -> 614
	615 [label=true]
	614 -> 615
	616 [label=assign]
	1 -> 616
	617 [label=id]
	616 -> 617
	618 [label=t]
	617 -> 618
	619 [label=literal]
	616 -> 619
	620 [label=7.5]
	619 -> 620
	621 [label=assign]
	1 -> 621
	622 [label=id]
	621 -> 622
	623 [label=b]
	622 -> 623
	624 [label=literal]
	621 -> 624
	625 [label=7]
	624 -> 625
	626 [label=if_statement]
	1 -> 626
	627 [label=binop]
	626 -> 627
	628 [label=or]
	627 -> 628
	629 [label=binop]
	627 -> 629
	630 [label=and]
	629 -> 630
	631 [label=binop]
	629 -> 631
	632 [label=or]
	631 -> 632
	633 [label=binop]
	631 -> 633
	634 [label="=="]
	633 -> 634
	635 [label=id]
	633 -> 635
	636 [label=f2]
	635 -> 636
	637 [label=literal]
	633 -> 637
	638 [label=3]
	637 -> 638
	639 [label=id]
	631 -> 639
	640 [label=b1]
	639 -> 640
	641 [label=id]
	629 -> 641
	642 [label=b2]
	641 -> 642
	643 [label=binop]
	627 -> 643
	644 [label=">="]
	643 -> 644
	645 [label=binop]
	643 -> 645
	646 [label="-"]
	645 -> 646
	647 [label=literal]
	645 -> 647
	648 [label=10]
	647 -> 648
	649 [label=binop]
	645 -> 649
	650 [label="*"]
	649 -> 650
	651 [label=literal]
	649 -> 651
	652 [label=5]
	651 -> 652
	653 [label=id]
	649 -> 653
	654 [label=i1]
	653 -> 654
	655 [label=binop]
	643 -> 655
	656 [label="-"]
	655 -> 656
	657 [label=literal]
	655 -> 657
	658 [label=255]
	657 -> 658
	659 [label=literal]
	655 -> 659
	660 [label=0.1]
	659 -> 660
	661 [label=block]
	626 -> 661
	662 [label=nl]
	661 -> 662
	663 [label=nl]
	662 -> 663
	664 [label=assign]
	662 -> 664
	665 [label=id]
	664 -> 665
	666 [label=f2]
	665 -> 666
	667 [label=binop]
	664 -> 667
	668 [label="-"]
	667 -> 668
	669 [label=id]
	667 -> 669
	670 [label=f2]
	669 -> 670
	671 [label=literal]
	667 -> 671
	672 [label=3]
	671 -> 672
	673 [label=else]
	626 -> 673
	674 [label=block]
	673 -> 674
	675 [label=nl]
	674 -> 675
	676 [label=nl]
	675 -> 676
	677 [label=assign]
	675 -> 677
	678 [label=id]
	677 -> 678
	679 [label=f2]
	678 -> 679
	680 [label=binop]
	677 -> 680
	681 [label="-"]
	680 -> 681
	682 [label=literal]
	680 -> 682
	683 [label=10]
	682 -> 683
	684 [label=binop]
	680 -> 684
	685 [label="*"]
	684 -> 685
	686 [label=id]
	684 -> 686
	687 [label=f1]
	686 -> 687
	688 [label=id]
	684 -> 688
	689 [label=f1]
	688 -> 689
	690 [label=nl]
	1 -> 690
	691 [label=declaration]
	1 -> 691
	692 [label=int]
	691 -> 692
	693 [label="('var', 'i', ('assignment', None))"]
	691 -> 693
	694 [label=var]
	693 -> 694
	695 [label=i]
	694 -> 695
	696 [label=assignment]
	694 -> 696
	697 [label=var]
	693 -> 697
	698 [label=var]
	697 -> 698
	699 [label=assignment]
	697 -> 699
	700 [label=assign]
	699 -> 700
	701 [label=literal]
	700 -> 701
	702 [label=0]
	701 -> 702
	703 [label=while_statement]
	1 -> 703
	704 [label=binop]
	703 -> 704
	705 [label="<"]
	704 -> 705
	706 [label=id]
	704 -> 706
	707 [label=i]
	706 -> 707
	708 [label=literal]
	704 -> 708
	709 [label=10]
	708 -> 709
	710 [label=block]
	703 -> 710
	711 [label=nl]
	710 -> 711
	712 [label=nl]
	711 -> 712
	713 [label=assign]
	711 -> 713
	714 [label=id]
	713 -> 714
	715 [label=var]
	714 -> 715
	716 [label=binop]
	713 -> 716
	717 [label="*"]
	716 -> 717
	718 [label=binop]
	716 -> 718
	719 [label="+"]
	718 -> 719
	720 [label=id]
	718 -> 720
	721 [label=var]
	720 -> 721
	722 [label=literal]
	718 -> 722
	723 [label=1]
	722 -> 723
	724 [label=literal]
	716 -> 724
	725 [label=2]
	724 -> 725
	726 [label=assign]
	711 -> 726
	727 [label=id]
	726 -> 727
	728 [label=i]
	727 -> 728
	729 [label=binop]
	726 -> 729
	730 [label="+"]
	729 -> 730
	731 [label=id]
	729 -> 731
	732 [label=i]
	731 -> 732
	733 [label=literal]
	729 -> 733
	734 [label=1]
	733 -> 734
	735 [label=nl]
	1 -> 735
	736 [label=funct_decl]
	1 -> 736
	737 [label=type_funct]
	736 -> 737
	738 [label=int]
	737 -> 738
	739 [label=mod]
	736 -> 739
	740 [label=arg_funct]
	736 -> 740
	741 [label=type]
	740 -> 741
	742 [label=type_funct]
	740 -> 742
	743 [label=int]
	742 -> 743
	744 [label=args]
	740 -> 744
	745 [label=a]
	740 -> 745
	746 [label="(None, 'b')"]
	745 -> 746
	747 [label=None]
	746 -> 747
	748 [label=b]
	747 -> 748
	749 [label="[]"]
	745 -> 749
	750 [label=block_funct]
	736 -> 750
	751 [label=nl]
	750 -> 751
	752 [label=nl]
	751 -> 752
	753 [label=while_statement]
	751 -> 753
	754 [label=binop]
	753 -> 754
	755 [label=">="]
	754 -> 755
	756 [label=id]
	754 -> 756
	757 [label=a]
	756 -> 757
	758 [label=id]
	754 -> 758
	759 [label=b]
	758 -> 759
	760 [label=block]
	753 -> 760
	761 [label=nl]
	760 -> 761
	762 [label=nl]
	761 -> 762
	763 [label=assign]
	761 -> 763
	764 [label=id]
	763 -> 764
	765 [label=a]
	764 -> 765
	766 [label=binop]
	763 -> 766
	767 [label="-"]
	766 -> 767
	768 [label=id]
	766 -> 768
	769 [label=a]
	768 -> 769
	770 [label=id]
	766 -> 770
	771 [label=b]
	770 -> 771
	772 [label=nl]
	751 -> 772
	773 [label=funct_ret]
	750 -> 773
	774 [label=id]
	773 -> 774
	775 [label=a]
	774 -> 775
	776 [label=funct_decl]
	1 -> 776
	777 [label=type_funct]
	776 -> 777
	778 [label=int]
	777 -> 778
	779 [label=greatest_common_divisor]
	776 -> 779
	780 [label=arg_funct]
	776 -> 780
	781 [label=type]
	780 -> 781
	782 [label=type_funct]
	780 -> 782
	783 [label=int]
	782 -> 783
	784 [label=args]
	780 -> 784
	785 [label=a]
	780 -> 785
	786 [label="(None, 'b')"]
	785 -> 786
	787 [label=None]
	786 -> 787
	788 [label=b]
	787 -> 788
	789 [label="[]"]
	785 -> 789
	790 [label=block_funct]
	776 -> 790
	791 [label=nl]
	790 -> 791
	792 [label=nl]
	791 -> 792
	793 [label=declaration]
	791 -> 793
	794 [label=int]
	793 -> 794
	795 [label="('var', 'temp', ('assignment', None))"]
	793 -> 795
	796 [label=var]
	795 -> 796
	797 [label=temp]
	796 -> 797
	798 [label=assignment]
	796 -> 798
	799 [label=while_statement]
	791 -> 799
	800 [label=binop]
	799 -> 800
	801 [label="=="]
	800 -> 801
	802 [label=unary]
	800 -> 802
	803 [label=not]
	802 -> 803
	804 [label=id]
	802 -> 804
	805 [label=b]
	804 -> 805
	806 [label=literal]
	800 -> 806
	807 [label=0]
	806 -> 807
	808 [label=block]
	799 -> 808
	809 [label=nl]
	808 -> 809
	810 [label=nl]
	809 -> 810
	811 [label=assign]
	809 -> 811
	812 [label=id]
	811 -> 812
	813 [label=temp]
	812 -> 813
	814 [label=id]
	811 -> 814
	815 [label=b]
	814 -> 815
	816 [label=assign]
	809 -> 816
	817 [label=id]
	816 -> 817
	818 [label=b]
	817 -> 818
	819 [label=funct_call]
	816 -> 819
	820 [label=mod]
	819 -> 820
	821 [label="('id', 'a')"]
	819 -> 821
	822 [label=id]
	821 -> 822
	823 [label=a]
	822 -> 823
	824 [label=id]
	821 -> 824
	825 [label=b]
	824 -> 825
	826 [label=assign]
	809 -> 826
	827 [label=id]
	826 -> 827
	828 [label=a]
	827 -> 828
	829 [label=id]
	826 -> 829
	830 [label=temp]
	829 -> 830
	831 [label=nl]
	791 -> 831
	832 [label=funct_ret]
	790 -> 832
	833 [label=id]
	832 -> 833
	834 [label=a]
	833 -> 834
	835 [label=declaration]
	1 -> 835
	836 [label=int]
	835 -> 836
	837 [label="('var', 'result', ('assignment', ('assign', ('funct_call', 'greatest_common_divisor', [('literal', 132), ('literal', 255)]))))"]
	835 -> 837
	838 [label=var]
	837 -> 838
	839 [label=result]
	838 -> 839
	840 [label=assignment]
	838 -> 840
	841 [label=assign]
	840 -> 841
	842 [label=funct_call]
	841 -> 842
	843 [label=greatest_common_divisor]
	842 -> 843
	844 [label="('literal', 132)"]
	842 -> 844
	845 [label=literal]
	844 -> 845
	846 [label=132]
	845 -> 846
	847 [label=literal]
	844 -> 847
	848 [label=255]
	847 -> 848
	849 [label=register]
	1 -> 849
	850 [label=Strings]
	849 -> 850
	851 [label=block]
	849 -> 851
	852 [label=nl]
	851 -> 852
	853 [label=nl]
	852 -> 853
	854 [label=declaration]
	852 -> 854
	855 [label=char]
	854 -> 855
	856 [label="('vector_decl', '_', ('literal', 64), ('assignment', None))"]
	854 -> 856
	857 [label=vector_decl]
	856 -> 857
	858 [label=_]
	857 -> 858
	859 [label=literal]
	857 -> 859
	860 [label=64]
	859 -> 860
	861 [label=assignment]
	857 -> 861
	862 [label=nl]
	1 -> 862
	863 [label=register]
	1 -> 863
	864 [label=User]
	863 -> 864
	865 [label=block]
	863 -> 865
	866 [label=nl]
	865 -> 866
	867 [label=nl]
	866 -> 867
	868 [label=declaration]
	866 -> 868
	869 [label=int]
	868 -> 869
	870 [label="('var', 'user_id', ('assignment', None))"]
	868 -> 870
	871 [label=var]
	870 -> 871
	872 [label=user_id]
	871 -> 872
	873 [label=assignment]
	871 -> 873
	874 [label=declaration]
	866 -> 874
	875 [label=Strings]
	874 -> 875
	876 [label="('var', 'nickname', ('assignment', None))"]
	874 -> 876
	877 [label=var]
	876 -> 877
	878 [label=nickname]
	877 -> 878
	879 [label=assignment]
	877 -> 879
	880 [label=nl]
	1 -> 880
	881 [label=declaration]
	1 -> 881
	882 [label=int]
	881 -> 882
	883 [label="('var', 'global_id', ('assignment', ('assign', ('literal', 0))))"]
	881 -> 883
	884 [label=var]
	883 -> 884
	885 [label=global_id]
	884 -> 885
	886 [label=assignment]
	884 -> 886
	887 [label=assign]
	886 -> 887
	888 [label=literal]
	887 -> 888
	889 [label=0]
	888 -> 889
	890 [label=funct_decl]
	1 -> 890
	891 [label=type_funct]
	890 -> 891
	892 [label=User]
	891 -> 892
	893 [label=new_user]
	890 -> 893
	894 [label=arg_funct]
	890 -> 894
	895 [label=type]
	894 -> 895
	896 [label=type_funct]
	894 -> 896
	897 [label=Strings]
	896 -> 897
	898 [label=args]
	894 -> 898
	899 [label=nickname]
	894 -> 899
	900 [label="[]"]
	899 -> 900
	901 [label="[]"]
	899 -> 901
	902 [label=block_funct]
	890 -> 902
	903 [label=nl]
	902 -> 903
	904 [label=nl]
	903 -> 904
	905 [label=declaration]
	903 -> 905
	906 [label=User]
	905 -> 906
	907 [label="('var', 'user', ('assignment', None))"]
	905 -> 907
	908 [label=var]
	907 -> 908
	909 [label=user]
	908 -> 909
	910 [label=assignment]
	908 -> 910
	911 [label=assign]
	903 -> 911
	912 [label=dot]
	911 -> 912
	913 [label=id]
	912 -> 913
	914 [label=user]
	913 -> 914
	915 [label=id]
	912 -> 915
	916 [label=user_id]
	915 -> 916
	917 [label=id]
	911 -> 917
	918 [label=global_id]
	917 -> 918
	919 [label=assign]
	903 -> 919
	920 [label=id]
	919 -> 920
	921 [label=global_id]
	920 -> 921
	922 [label=binop]
	919 -> 922
	923 [label="+"]
	922 -> 923
	924 [label=id]
	922 -> 924
	925 [label=global_id]
	924 -> 925
	926 [label=literal]
	922 -> 926
	927 [label=1]
	926 -> 927
	928 [label=assign]
	903 -> 928
	929 [label=dot]
	928 -> 929
	930 [label=id]
	929 -> 930
	931 [label=user]
	930 -> 931
	932 [label=id]
	929 -> 932
	933 [label=nickname]
	932 -> 933
	934 [label=id]
	928 -> 934
	935 [label=nickname]
	934 -> 935
	936 [label=funct_ret]
	902 -> 936
	937 [label=id]
	936 -> 937
	938 [label=user]
	937 -> 938
	939 [label=declaration]
	1 -> 939
	940 [label=Strings]
	939 -> 940
	941 [label="('var', 'nickname', ('assignment', None))"]
	939 -> 941
	942 [label=var]
	941 -> 942
	943 [label=nickname]
	942 -> 943
	944 [label=assignment]
	942 -> 944
	945 [label=assign]
	1 -> 945
	946 [label=dot]
	945 -> 946
	947 [label=id]
	946 -> 947
	948 [label=nickname]
	947 -> 948
	949 [label=id]
	946 -> 949
	950 [label=_]
	949 -> 950
	951 [label=index]
	946 -> 951
	952 [label=literal]
	951 -> 952
	953 [label=0]
	952 -> 953
	954 [label=literal]
	945 -> 954
	955 [label=V]
	954 -> 955
	956 [label=assign]
	1 -> 956
	957 [label=dot]
	956 -> 957
	958 [label=id]
	957 -> 958
	959 [label=nickname]
	958 -> 959
	960 [label=id]
	957 -> 960
	961 [label=_]
	960 -> 961
	962 [label=index]
	957 -> 962
	963 [label=literal]
	962 -> 963
	964 [label=1]
	963 -> 964
	965 [label=literal]
	956 -> 965
	966 [label=i]
	965 -> 966
	967 [label=assign]
	1 -> 967
	968 [label=dot]
	967 -> 968
	969 [label=id]
	968 -> 969
	970 [label=nickname]
	969 -> 970
	971 [label=id]
	968 -> 971
	972 [label=_]
	971 -> 972
	973 [label=index]
	968 -> 973
	974 [label=literal]
	973 -> 974
	975 [label=2]
	974 -> 975
	976 [label=literal]
	967 -> 976
	977 [label=p]
	976 -> 977
	978 [label=assign]
	1 -> 978
	979 [label=dot]
	978 -> 979
	980 [label=id]
	979 -> 980
	981 [label=nickname]
	980 -> 981
	982 [label=id]
	979 -> 982
	983 [label=_]
	982 -> 983
	984 [label=index]
	979 -> 984
	985 [label=literal]
	984 -> 985
	986 [label=3]
	985 -> 986
	987 [label=literal]
	978 -> 987
	988 [label=e]
	987 -> 988
	989 [label=assign]
	1 -> 989
	990 [label=dot]
	989 -> 990
	991 [label=id]
	990 -> 991
	992 [label=nickname]
	991 -> 992
	993 [label=id]
	990 -> 993
	994 [label=_]
	993 -> 994
	995 [label=index]
	990 -> 995
	996 [label=literal]
	995 -> 996
	997 [label=4]
	996 -> 997
	998 [label=literal]
	989 -> 998
	999 [label=r]
	998 -> 999
	1000 [label=funct_call]
	1 -> 1000
	1001 [label=new_user]
	1000 -> 1001
	1002 [label="('id', 'nickname')"]
	1000 -> 1002
	1003 [label=id]
	1002 -> 1003
	1004 [label=nickname]
	1003 -> 1004
}
